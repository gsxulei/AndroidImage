apply plugin: 'com.android.application'

apply plugin: 'AndResGuard'

buildscript
{
	repositories
	{
		mavenCentral()
		jcenter()
		google()
	}
	dependencies
	{
		classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.15'
	}
}

andResGuard
{
	// mappingFile=file("./resource_mapping.txt")
	mappingFile=null
	use7zip=true
	useSign=true
	// 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
	keepRoot=false
	whiteList=
	[
		// for your icon
		"R.drawable.icon",
		// for fabric
		"R.string.com.crashlytics.*",
		// for google-services
		"R.string.google_app_id",
		"R.string.gcm_defaultSenderId",
		"R.string.default_web_client_id",
		"R.string.ga_trackingId",
		"R.string.firebase_database_url",
		"R.string.google_api_key",
		"R.string.google_crash_reporting_api_key"
	]

	compressFilePattern=
	[
		"*.png",
		"*.jpg",
		"*.jpeg",
		"*.gif",
	]

	sevenzip
	{
		//artifact = 'com.tencent.mm:SevenZip:1.2.15'
		path="D:\\ProgramFiles\\7z\\7z1805-extra\\x64\\7za"
	}

	/**
	 * 可选： 如果不设置则会默认覆盖assemble输出的apk
	 **/
	finalApkBackupPath="${project.rootDir}/app/build/outputs/apk/gsxulei/release/final.apk"

	/**
	 * 可选: 指定v1签名时生成jar文件的摘要算法
	 * 默认值为“SHA-1”
	 **/
	// digestalg = "SHA-256"
}

android
{
	//compileSdkVersion rootProject.ext.compileSdkVersion
	compileSdkVersion var.compileSdkVersion
	defaultConfig
	{
		applicationId "com.x62.image"
		minSdkVersion var.minSdkVersion
		targetSdkVersion var.targetSdkVersion
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}

	//是否检查图片格式(png、点9)正确
	aaptOptions
	{
		cruncherEnabled=false
		useNewCruncher=false
	}

	//证书配置 keytool -printcert -file CERT.RSA
	signingConfigs
	{
		debug
		{
			storeFile file("../gsxulei.jks")
			storePassword 'androidcode'
			keyAlias 'gsxulei'
			keyPassword 'androidcode'
		}

		release
		{
			storeFile file("../gsxulei.jks")
			storePassword 'androidcode'
			keyAlias 'gsxulei'
			keyPassword 'androidcode'
		}
	}

	buildTypes
	{
		release
		{
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
	}

	flavorDimensions "product"
	productFlavors
	{
		gsxulei
		{
			dimension "product"
			applicationId "com.x62.gsxulei.demo"
		}
	}

	//每个模块按照此方式添加独立的资源文件
	sourceSets.main
	{
		res.srcDirs+='src/main/res'
		res.srcDirs+='src/main/res-commons'
	}

	//自定义apk名称
//	android.applicationVariants.all
//	{
//		variant->variant.outputs.all
//		{
//			outputFileName="app_v${defaultConfig.versionName}_${variant.productFlavors[0].name}.apk"
//		}
//	}

	//编译完成后执行安装启动脚本
	applicationVariants.all
	{
		variant->variant.assemble.doLast
		{
			exec
			{
				workingDir './install'
				commandLine=['cmd','/c','install.bat',variant.buildType.name,variant.outputs[0].outputFile]
			}
		}
	}

//	sourceSets
//	{
//		main
//		{
//			jniLibs.srcDirs=['libs']
//		}
//	}
}

dependencies
{
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	implementation var.appcompat
	implementation var.recyclerview
	implementation var.design
	implementation var.supportV13

	implementation var.glide
	implementation var.gson
	implementation var.SubsamplingScaleImageView

	implementation var.retrofit
	implementation var.ConverterGson
	implementation var.OkHttpLogging

	compileOnly files("${android.getSdkDirectory().getAbsolutePath()}/platforms/android-23/data/layoutlib.jar")

	//implementation 'org.greenrobot:eventbus:3.1.1'
	//implementation 'com.android.support.constraint:constraint-layout:1.1.0'
	//testImplementation 'junit:junit:4.12'
	//androidTestImplementation 'com.android.support.test:runner:1.0.1'
	//androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

	//implementation project(':commons')
}